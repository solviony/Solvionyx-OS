name: Build & Release Solvionyx OS Aurora (GNOME)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 3 * * *" # optional nightly

permissions:
  contents: write

env:
  AURORA_VERSION: v4.4.2
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

defaults:
  run:
    shell: bash

jobs:
  gnome:
    name: Aurora (GNOME)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install build deps (auto-detect for Ubuntu/Debian)
        run: |
          sudo apt-get update
          if grep -qi ubuntu /etc/os-release; then
            echo "Detected Ubuntu runner â€” using grub2-common and grub-common"
            sudo apt-get install -y --no-install-recommends \
              debootstrap gdisk mtools dosfstools xorriso squashfs-tools \
              grub-pc-bin grub-efi-amd64-bin grub2-common grub-common \
              genisoimage ca-certificates curl rsync zip rclone awscli jq
          else
            echo "Detected Debian runner â€” using grub-mkrescue"
            sudo apt-get install -y --no-install-recommends \
              debootstrap gdisk mtools dosfstools xorriso squashfs-tools \
              grub-pc-bin grub-efi-amd64-bin grub-mkrescue \
              genisoimage ca-certificates curl rsync zip rclone awscli jq
          fi

      - name: Build ISO
        run: |
          chmod +x ./build_iso_debian.sh
          sudo AURORA_VERSION="${AURORA_VERSION}" ./build_iso_debian.sh

      - name: Upload ISO artifact (always)
        uses: actions/upload-artifact@v4
        with:
          name: Solvionyx-OS-Aurora-gnome
          path: iso_output/*.iso
          compression-level: 0

  release:
    name: Publish Release (Smart AutoUploader)
    needs: [ gnome ]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Solvionyx-OS-Aurora-gnome
          path: release

      - name: Generate checksums
        run: |
          cd release
          sha256sum *.iso > SHA256SUMS.txt
          ls -lh

      - name: Compress if ISO > 2 GiB
        id: compress
        run: |
          F=$(ls -1 release/*.iso | head -n1)
          BYTES=$(stat -c%s "$F")
          LIMIT=$((2*1024*1024*1024))
          if [ "$BYTES" -gt "$LIMIT" ]; then
            echo "Compressing ISO to fit GitHub release limit..."
            zip -r9 "${F}.zip" "$F"
            echo "final_file=${F}.zip" >> $GITHUB_OUTPUT
          else
            echo "final_file=$F" >> $GITHUB_OUTPUT
          fi

      - name: Upload to GitHub Release if â‰¤ 2 GiB
        if: endsWith(steps.compress.outputs.final_file, '.iso')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: Aurora-${{ env.AURORA_VERSION }}
          name: "Solvionyx OS Aurora ${{ env.AURORA_VERSION }} â€” GNOME"
          body: |
            Solvionyx OS Aurora (GNOME) AutoBuilder (v4.4.2)
            âœ… Bootable ISO (UEFI + BIOS)
            âœ… Includes checksum file
          files: |
            release/*.iso
            release/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload large build to Google Drive / S3
        if: endsWith(steps.compress.outputs.final_file, '.zip')
        id: upload
        run: |
          echo "ISO exceeds 2 GiB â€” using external upload."
          F="${{ steps.compress.outputs.final_file }}"
          LINK=""
          
          if [ -n "${{ secrets.RCLONE_CONF }}" ]; then
            echo "${{ secrets.RCLONE_CONF }}" > ~/.config/rclone/rclone.conf
            echo "Uploading to Google Drive..."
            rclone copy "$F" "drive:Solvionyx-ISOs" --progress
            LINK=$(rclone link "drive:Solvionyx-ISOs/$(basename "$F")" || true)
          elif [ -n "${{ secrets.S3_BUCKET }}" ]; then
            echo "Uploading to S3..."
            aws s3 cp "$F" "s3://${{ secrets.S3_BUCKET }}/" --acl public-read
            LINK="https://${{ secrets.S3_BUCKET }}.s3.amazonaws.com/$(basename "$F")"
          else
            echo "::warning::No external upload config found."
          fi

          echo "download_link=$LINK" >> $GITHUB_OUTPUT

      - name: Create GitHub Release with External Link
        if: endsWith(steps.compress.outputs.final_file, '.zip')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: Aurora-${{ env.AURORA_VERSION }}
          name: "Solvionyx OS Aurora ${{ env.AURORA_VERSION }} â€” GNOME (External Upload)"
          body: |
            Solvionyx OS Aurora (GNOME) AutoBuilder (v4.4.2)
            ðŸš€ ISO exceeded 2 GiB â€” uploaded externally.
            ðŸ”— Download: **${{ steps.upload.outputs.download_link }}**
            Includes checksum file and compression log.
          files: release/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

