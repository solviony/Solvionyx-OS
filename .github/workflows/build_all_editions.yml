name: Build & Release Solvionyx OS — Aurora Series (All Editions via GCS)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: 🧠 Solvionyx OS — Aurora (${{ matrix.edition }})
    runs-on: ubuntu-24.04
    timeout-minutes: 120

    strategy:
      matrix:
        edition: [gnome, xfce, kde]
      fail-fast: false

    steps:
    - name: 🧩 Checkout repository
      uses: actions/checkout@v4

    - name: 🧹 Clean workspace
      run: sudo rm -rf solvionyx_build || true

    - name: ⚙️ Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          debootstrap grub-pc-bin grub-efi-amd64-bin grub-common \
          syslinux isolinux syslinux-utils mtools xorriso squashfs-tools \
          rsync systemd-container genisoimage dosfstools xz-utils jq curl unzip \
          plymouth plymouth-themes plymouth-label python3-pip google-cloud-cli
        echo "✅ Dependencies installed."

    - name: 🔐 Authenticate with Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCS_CREDENTIALS_JSON }}

    - name: ☁️ Setup gcloud + gsutil
      uses: google-github-actions/setup-gcloud@v2
      with:
        install_components: 'gsutil'

    - name: 🌍 Ensure GCS bucket public-read policy
      env:
        GCS_BUCKET: solvionyx-os
      run: |
        gsutil iam ch allUsers:objectViewer gs://${GCS_BUCKET} || true
        echo "✅ Public-read access confirmed."

    - name: 💿 Run Solvionyx ISO Builder (${{ matrix.edition }})
      run: |
        chmod +x build_iso_debian.sh
        sudo ./build_iso_debian.sh ${{ matrix.edition }}

    - name: 🔍 Verify ISO existence
      run: |
        ISO_PATH=$(find solvionyx_build -type f -name "*.iso*" | head -n 1)
        [ -z "$ISO_PATH" ] && echo "❌ No ISO found" && exit 1 || echo "✅ Found ISO: $ISO_PATH"

    - name: 🗜️ Compress ISO
      run: |
        cd solvionyx_build
        ISO_FILE=$(find . -name "*.iso" | head -n 1)
        [ -f "$ISO_FILE" ] && xz -T2 -5 "$ISO_FILE" && echo "✅ Compressed."

    - name: 🔐 Generate SHA256 checksums
      run: |
        cd solvionyx_build
        sha256sum *.iso.xz > SHA256SUMS.txt

    - name: 🧩 Verify Bootable ISO Structure & Branding
      run: |
        ISO_FILE=$(find solvionyx_build -name "*.iso.xz" | head -n 1)
        xz -d -k "$ISO_FILE"
        RAW_ISO="${ISO_FILE%.xz}"
        mkdir -p mnt
        sudo mount -o loop "$RAW_ISO" mnt
        if [ ! -f mnt/boot/vmlinuz-* ] || [ ! -f mnt/EFI/BOOT/BOOTX64.EFI ]; then
          echo "❌ Missing boot files!"; sudo umount mnt; exit 1
        fi
        echo "✅ Bootable ISO structure valid."
        sudo umount mnt

    - name: ☁️ Upload to Google Cloud Storage
      env:
        GCS_BUCKET: solvionyx-os
      run: |
        VERSION="v${{ github.run_number }}"
        ISO_DIR="solvionyx_build"
        EDITION="${{ matrix.edition }}"
        RELEASE_PATH="aurora/${VERSION}/${EDITION}"
        LATEST_PATH="aurora/latest/${EDITION}"

        ISO_FILE=$(ls ${ISO_DIR}/*.iso.xz | head -n 1)
        SHA256_FILE="${ISO_DIR}/SHA256SUMS.txt"
        gsutil -m cp "$ISO_FILE" gs://${GCS_BUCKET}/${RELEASE_PATH}/
        gsutil -m cp "$SHA256_FILE" gs://${GCS_BUCKET}/${RELEASE_PATH}/
        gsutil -m cp "$ISO_FILE" gs://${GCS_BUCKET}/${LATEST_PATH}/
        gsutil -m cp "$SHA256_FILE" gs://${GCS_BUCKET}/${LATEST_PATH}/

        echo "✅ Uploaded to GCS."

    - name: 🌍 Verify GCS Public Access
      env:
        GCS_BUCKET: solvionyx-os
      run: |
        EDITION="${{ matrix.edition }}"
        ISO_FILE=$(find solvionyx_build -name "*.iso.xz" | head -n 1)
        ISO_NAME=$(basename "$ISO_FILE")
        URL="https://storage.googleapis.com/${GCS_BUCKET}/aurora/latest/${EDITION}/${ISO_NAME}"
        STATUS=$(curl -o /dev/null -s -w "%{http_code}" "$URL")
        [ "$STATUS" -eq 200 ] && echo "✅ Publicly accessible." || echo "⚠️ HTTP $STATUS"

    - name: 🧹 Cleanup Old Versions
      env:
        GCS_BUCKET: solvionyx-os
      run: |
        EDITION="${{ matrix.edition }}"
        LIST=$(gsutil ls gs://${GCS_BUCKET}/aurora/ | grep "${EDITION}" | sort)
        COUNT=$(echo "$LIST" | wc -l)
        if [ "$COUNT" -gt 5 ]; then
          REMOVE=$(echo "$LIST" | head -n $(($COUNT-5)))
          echo "$REMOVE" | xargs -I {} gsutil -m rm -r "{}"
          echo "✅ Removed old versions."
        else
          echo "ℹ️ No cleanup needed."
        fi

    - name: 📋 Build Summary
      run: |
        echo "✅ GCS-only build complete." >> $GITHUB_STEP_SUMMARY
        echo "🌍 Bucket: solvionyx-os" >> $GITHUB_STEP_SUMMARY
