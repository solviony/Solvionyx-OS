name: Build & Release Solvionyx OS Editions
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    name: Aurora (${{ matrix.desktop }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        desktop: [ gnome, xfce, kde ]
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-utils xorriso squashfs-tools genisoimage wget curl rsync debootstrap

      # ✅ Run builder under *bash* even with sudo; pass DESKTOP via env
      - name: Build ${{ matrix.desktop }}
        shell: bash
        env:
          DESKTOP: ${{ matrix.desktop }}
        run: |
          chmod +x build_iso_debian.sh
          sudo bash build_iso_debian.sh

      # Upload whatever builds, even if other editions fail later
      - name: Upload ISO artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Solvionyx-OS-v4.3.8-${{ matrix.desktop }}
          path: iso_output/*.iso

  release:
    name: Publish Release (Partial OK)
    runs-on: ubuntu-latest
    needs: [ build ]
    if: always()
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: release/
          pattern: Solvionyx-OS-v4.3.8-*
          merge-multiple: true

      - name: Prepare checksums
        run: |
          cd release || exit 0
          if ls *.iso >/dev/null 2>&1; then sha256sum *.iso > SHA256SUMS.txt; fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: Aurora-v4.3.8
          name: "Solvionyx OS Aurora v4.3.8 — GNOME/XFCE/KDE"
          body: |
            - CI runs builder with Bash (fixed 'pipefail' error)
            - Debian Live auto-detection
            - Partial release publishes available ISOs
          files: |
            release/*.iso
            release/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
