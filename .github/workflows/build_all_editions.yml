name: Build & Release Solvionyx OS Aurora (GNOME)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 3 * * *" # optional nightly

permissions:
  contents: write    # required for creating releases

env:
  AURORA_VERSION: v4.4.0
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} # create GH_TOKEN with 'repo' scope

defaults:
  run:
    shell: bash

jobs:
  gnome:
    name: Aurora (GNOME)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            debootstrap gdisk mtools dosfstools xorriso squashfs-tools \
            grub-pc-bin grub-efi-amd64-bin grub-mkrescue genisoimage \
            ca-certificates curl rsync

      - name: Build ISO
        run: |
          chmod +x ./build_iso_debian.sh
          sudo AURORA_VERSION="${AURORA_VERSION}" ./build_iso_debian.sh

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: Solvionyx-OS-Aurora-gnome
          path: iso_output/*.iso
          compression-level: 0

  release:
    name: Publish Release (if ≤ 2 GiB)
    needs: [ gnome ]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Solvionyx-OS-Aurora-gnome
          path: release

      - name: Generate checksums
        run: |
          cd release
          sha256sum *.iso > SHA256SUMS.txt
          ls -lh

      - name: Skip if file > 2 GiB
        id: sizecheck
        run: |
          F=$(ls -1 release/*.iso | head -n1)
          BYTES=$(stat -c%s "$F")
          LIMIT=$((2*1024*1024*1024))
          if [ "$BYTES" -gt "$LIMIT" ]; then
            echo "too_big=true" >> $GITHUB_OUTPUT
          else
            echo "too_big=false" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        if: steps.sizecheck.outputs.too_big == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: Aurora-${{ env.AURORA_VERSION }}
          name: "Solvionyx OS Aurora ${{ env.AURORA_VERSION }} — GNOME"
          body: |
            Solvionyx OS Aurora (GNOME). Bootable (UEFI & BIOS), slim, compressed.
            - Debian ${{ env.AURORA_VERSION }} builder
            - Live user: **solviony** (auto-login)
            - SHA256 checksums included
          files: |
            release/*.iso
            release/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Note if too big
        if: steps.sizecheck.outputs.too_big == 'true'
        run: |
          echo "::warning::ISO exceeded 2 GiB (GitHub release limit)."
          echo "The ISO is attached as a workflow artifact instead."

