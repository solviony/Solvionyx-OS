name: Build & Release Solvionyx OS (All Editions)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-all:
    name: 🧠 Solvionyx OS — Aurora Series (GNOME, XFCE, KDE)
    runs-on: ubuntu-24.04
    timeout-minutes: 120
    strategy:
      matrix:
        edition: [gnome, xfce, kde]
      fail-fast: false

    steps:
    # ---------------------------------------------------
    # 1. Checkout Repository
    # ---------------------------------------------------
    - name: 🧩 Checkout repository
      uses: actions/checkout@v4

    # ---------------------------------------------------
    # 2. Install Dependencies
    # ---------------------------------------------------
    - name: ⚙️ Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          debootstrap grub-pc-bin grub-efi-amd64-bin grub-common \
          syslinux isolinux syslinux-utils mtools xorriso squashfs-tools \
          rsync systemd-container genisoimage dosfstools xz-utils jq curl unzip \
          plymouth-theme-spinner python3-pip
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip -qq awscliv2.zip
        sudo ./aws/install
        aws --version

    # ---------------------------------------------------
    # 3. Build ISO (Matrix Edition)
    # ---------------------------------------------------
    - name: 💿 Build Solvionyx ISO (${{ matrix.edition }})
      run: |
        echo "🚀 Building Solvionyx OS Aurora (${{ matrix.edition }})..."
        chmod +x build_iso_debian.sh
        sudo DESKTOP=${{ matrix.edition }} bash build_iso_debian.sh
        echo "✅ Build completed successfully for ${{ matrix.edition }}."

    # ---------------------------------------------------
    # 4. Verify & Compress ISO
    # ---------------------------------------------------
    - name: 🔍 Verify and Compress ISO
      run: |
        ISO_PATH=$(find solvionyx_build -type f -name "*.iso*" | head -n 1 || true)
        if [ -z "$ISO_PATH" ]; then echo "❌ ISO not found"; exit 1; fi
        echo "✅ ISO located: $ISO_PATH"
        cd solvionyx_build
        xz -T0 -9e *.iso
        sha256sum *.xz > SHA256SUMS.txt
        ls -lh

    # ---------------------------------------------------
    # 5. Configure AWS Credentials
    # ---------------------------------------------------
    - name: ☁️ Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    # ---------------------------------------------------
    # 6. Upload to AWS S3
    # ---------------------------------------------------
    - name: ☁️ Upload Solvionyx (${{ matrix.edition }}) to S3
      env:
        S3_BUCKET: solvionyx-releases
      run: |
        EDITION="${{ matrix.edition }}"
        VERSION="v${{ github.run_number }}"
        ISO_FILE=$(ls solvionyx_build/*.iso.xz | head -n 1)
        BUCKET_URL="https://solvionyx-releases.s3.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com"

        # Assign friendly name for web
        if [ "$EDITION" = "gnome" ]; then EDITION_NAME="Aurora (GNOME)"; DIR="aurora"; fi
        if [ "$EDITION" = "xfce" ]; then EDITION_NAME="Aurora Lite (XFCE)"; DIR="aurora-lite"; fi
        if [ "$EDITION" = "kde" ]; then EDITION_NAME="Aurora Studio (KDE)"; DIR="aurora-studio"; fi

        echo "☁️ Uploading $EDITION_NAME..."
        aws s3 cp "$ISO_FILE" "s3://$S3_BUCKET/$DIR/$VERSION/"
        aws s3 cp "solvionyx_build/SHA256SUMS.txt" "s3://$S3_BUCKET/$DIR/$VERSION/"
        aws s3 cp "$ISO_FILE" "s3://$S3_BUCKET/$DIR/latest/"
        aws s3 cp "solvionyx_build/SHA256SUMS.txt" "s3://$S3_BUCKET/$DIR/latest/"

        # Generate latest.json
        ISO_NAME=$(basename "$ISO_FILE")
        SHA256_HASH=$(sha256sum "$ISO_FILE" | awk '{print $1}')
        DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        cat > latest.json <<EOF
        {
          "version": "${VERSION}",
          "release_name": "Solvionyx OS ${EDITION_NAME}",
          "tagline": "The engine behind the vision.",
          "brand": "Solvionyx OS",
          "build_date": "${DATE}",
          "iso_name": "${ISO_NAME}",
          "sha256": "${SHA256_HASH}",
          "download_url": "${BUCKET_URL}/${DIR}/latest/${ISO_NAME}",
          "checksum_url": "${BUCKET_URL}/${DIR}/latest/SHA256SUMS.txt"
        }
        EOF

        cat latest.json
        aws s3 cp latest.json "s3://$S3_BUCKET/$DIR/latest/latest.json"
        echo "✅ Uploaded latest.json for ${EDITION_NAME}"

    # ---------------------------------------------------
    # 7. Cleanup Old Versions (Keep 3 Latest)
    # ---------------------------------------------------
    - name: 🧹 Auto-clean old S3 versions
      env:
        S3_BUCKET: solvionyx-releases
      run: |
        EDITION="${{ matrix.edition }}"
        if [ "$EDITION" = "gnome" ]; then DIR="aurora"; fi
        if [ "$EDITION" = "xfce" ]; then DIR="aurora-lite"; fi
        if [ "$EDITION" = "kde" ]; then DIR="aurora-studio"; fi
        aws s3 ls s3://$S3_BUCKET/$DIR/ | grep PRE | awk '{print $2}' | sort -r | tail -n +4 | while read old; do
          echo "🗑️ Removing old version: $old"
          aws s3 rm --recursive "s3://$S3_BUCKET/$DIR/$old"
        done
        echo "✅ Cleanup complete for $DIR"

    # ---------------------------------------------------
    # 8. Publish GitHub Release
    # ---------------------------------------------------
    - name: 🚀 Publish GitHub Release (${{ matrix.edition }})
      uses: softprops/action-gh-release@v1
      with:
        tag_name: Aurora-${{ matrix.edition }}-v${{ github.run_number }}
        name: "Solvionyx OS Aurora (${{ matrix.edition }}) v${{ github.run_number }}"
        body: |
          ## 🧠 Solvionyx OS Aurora (${{ matrix.edition | upper }})
          *The Engine Behind the Vision.*

          ✅ Includes:
          - ${{ matrix.edition | upper }} desktop
          - Calamares installer
          - Solvionyx branding
          - Live boot (casper)
          - Automatic AWS & Web Sync

          🌐 **AWS S3 Download:**  
          https://solvionyx-releases.s3.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ matrix.edition }}/latest/

    # ---------------------------------------------------
    # 9. Post Summary
    # ---------------------------------------------------
    - name: 📋 Build Summary
      run: |
        echo "✅ Solvionyx OS Aurora (${{ matrix.edition }}) built and uploaded." >> $GITHUB_STEP_SUMMARY
        echo "🌍 S3 URL: https://solvionyx-releases.s3.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ matrix.edition }}/latest/" >> $GITHUB_STEP_SUMMARY
