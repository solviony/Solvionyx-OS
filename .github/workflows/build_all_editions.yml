name: Build & Release Solvionyx OS Aurora (GNOME)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Aurora (GNOME)
    runs-on: ubuntu-24.04
    timeout-minutes: 90

    steps:
    - name: 🧩 Checkout repository
      uses: actions/checkout@v4

    - name: ⚙️ Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          debootstrap grub-pc-bin grub-efi-amd64-bin grub-common \
          syslinux isolinux syslinux-utils mtools xorriso squashfs-tools \
          rsync systemd-container genisoimage dosfstools xz-utils \
          plymouth-theme-spinner awscli

    - name: 🧠 Run Solvionyx Aurora ISO Builder
      run: |
        chmod +x build_iso_debian.sh
        sudo bash build_iso_debian.sh

    - name: 🔍 Verify ISO existence
      run: |
        echo "🔍 Checking for ISO in solvionyx_build..."
        find solvionyx_build -type f \( -name "*.iso" -o -name "*.iso.xz" \)
        if ! find solvionyx_build -type f \( -name "*.iso" -o -name "*.iso.xz" \) | grep -q .; then
          echo "❌ No ISO file found after build!"
          exit 1
        fi
        echo "✅ ISO file located successfully."

    - name: 🧹 Normalize permissions
      run: sudo chmod -R 755 solvionyx_build || true

    - name: 🗜️ Compress ISO (skip if already compressed)
      run: |
        echo "🗜️ Checking compression..."
        if ls solvionyx_build/*.iso.xz 1> /dev/null 2>&1; then
          echo "✅ ISO already compressed. Skipping compression."
        else
          echo "🗜️ Compressing ISO..."
          xz -T0 -9e solvionyx_build/*.iso
        fi

    - name: 🔐 Generate checksums
      run: |
        echo "🔐 Generating SHA256 checksums..."
        cd solvionyx_build
        sha256sum *.iso.xz > SHA256SUMS.txt
        cat SHA256SUMS.txt

    - name: ☁️ Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: ☁️ Upload to AWS S3 (Versioned and Latest)
      env:
        S3_BUCKET: solvionyx-releases
      run: |
        echo "☁️ Uploading ISO and checksums to S3..."
        VERSION="v${{ github.run_number }}"
        ISO_DIR="solvionyx_build"

        aws s3 cp "$ISO_DIR"/*.iso.xz "s3://$S3_BUCKET/aurora/$VERSION/"
        aws s3 cp "$ISO_DIR/SHA256SUMS.txt" "s3://$S3_BUCKET/aurora/$VERSION/"

        # Maintain 'latest' folder
        aws s3 cp "$ISO_DIR"/*.iso.xz "s3://$S3_BUCKET/aurora/latest/"
        aws s3 cp "$ISO_DIR/SHA256SUMS.txt" "s3://$S3_BUCKET/aurora/latest/"

        echo "✅ Upload completed successfully."

    - name: 🚀 Publish GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: Aurora-v${{ github.run_number }}
        name: "Solvionyx Aurora OS (GNOME) v${{ github.run_number }}"
        body: |
          **Solvionyx OS Aurora (GNOME Edition)**  
          Tagline: *The engine behind the vision.*

          ✅ Includes:
          - GNOME desktop environment  
          - Calamares installer  
          - Solvionyx branding  
          - Live boot support (casper)

          🌐 **Direct Download (AWS S3):**  
          https://solvionyx-releases.s3.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/aurora/v${{ github.run_number }}/Solvionyx-Aurora-v${{ github.run_number }}.iso.xz

          🧾 **Checksums:**  
          https://solvionyx-releases.s3.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/aurora/v${{ github.run_number }}/SHA256SUMS.txt

    - name: 📋 Post Build Summary
      run: |
        echo "🧾 Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "✅ ISO built and uploaded successfully" >> $GITHUB_STEP_SUMMARY
        echo "🌍 Public Download URL:" >> $GITHUB_STEP_SUMMARY
        echo "https://solvionyx-releases.s3.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/aurora/latest/Solvionyx-Aurora-latest.iso.xz" >> $GITHUB_STEP_SUMMARY
