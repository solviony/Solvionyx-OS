name: Build, Upload, and Update Solvionyx OS Aurora (GNOME)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Aurora (GNOME)
    runs-on: ubuntu-24.04
    timeout-minutes: 120

    steps:
    - name: üß© Checkout repository
      uses: actions/checkout@v4

    - name: ‚öôÔ∏è Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          debootstrap grub-pc-bin grub-efi-amd64-bin grub-common \
          syslinux isolinux syslinux-utils mtools xorriso squashfs-tools \
          rsync systemd-container genisoimage dosfstools xz-utils \
          plymouth-theme-spinner lftp

    - name: üß† Run Solvionyx Aurora ISO Builder
      run: |
        chmod +x build_iso_debian.sh
        sudo bash build_iso_debian.sh || echo "‚ö†Ô∏è Build finished with warnings"
        echo "üîç Searching for ISO..."
        ISO_PATH=$(sudo find . -type f -name "Solvionyx-Aurora-*.iso" | head -n 1)
        if [ -z "$ISO_PATH" ]; then
          echo "‚ùå No ISO file found after build!"
          exit 1
        fi
        echo "‚úÖ Found ISO at: $ISO_PATH"
        sudo mkdir -p solvionyx_build
        sudo mv "$ISO_PATH" solvionyx_build/
        ls -lh solvionyx_build/

    - name: üóúÔ∏è Compress ISO (maximum compression)
      run: |
        cd solvionyx_build
        echo "üóúÔ∏è Compressing Solvionyx Aurora ISO..."
        ISO_FILE=$(ls *.iso 2>/dev/null | head -n 1)
        if [ -z "$ISO_FILE" ]; then
          echo "‚ùå No ISO found to compress. Build step may have failed."
          exit 1
        fi
        xz -T0 -9e "$ISO_FILE"
        echo "‚úÖ Compression complete."
        ls -lh *.xz

    - name: üîê Generate checksums
      run: |
        cd solvionyx_build
        echo "üîê Generating SHA256 checksums..."
        sha256sum *.xz > SHA256SUMS.txt
        chmod 644 SHA256SUMS.txt
        cat SHA256SUMS.txt

    - name: üì§ Upload to Solviony.com via FTP (Versioned)
      env:
        FTP_HOST: ${{ secrets.FTP_HOST }}
        FTP_USER: ${{ secrets.FTP_USER }}
        FTP_PASS: ${{ secrets.FTP_PASS }}
      run: |
        echo "üåê Uploading versioned build to solviony.com..."
        cd solvionyx_build

        VERSION=$(ls Solvionyx-Aurora-*.iso.xz | sed -E 's/.*(v[0-9]+\.[0-9]+\.[0-9]+).*/\1/')
        echo "Detected version: $VERSION"

        lftp -e "
          set ssl:verify-certificate no;
          mkdir -p /httpdocs/os/$VERSION;
          mkdir -p /httpdocs/os/latest;
          lcd .;
          cd /httpdocs/os/$VERSION;
          put -O . *.iso.xz;
          put -O . SHA256SUMS.txt;
          cd /httpdocs/os/latest;
          put -O . *.iso.xz;
          put -O . SHA256SUMS.txt;
          bye
        " -u \"$FTP_USER\",\"$FTP_PASS\" \"$FTP_HOST\"

        echo "‚úÖ Upload completed successfully."

    - name: üåç Update OS Download Page (auto-refresh)
      env:
        FTP_HOST: ${{ secrets.FTP_HOST }}
        FTP_USER: ${{ secrets.FTP_USER }}
        FTP_PASS: ${{ secrets.FTP_PASS }}
      run: |
        echo "üåç Updating https://solviony.com/page/os ..."
        cd solvionyx_build

        VERSION=$(ls Solvionyx-Aurora-*.iso.xz | sed -E 's/.*(v[0-9]+\.[0-9]+\.[0-9]+).*/\1/')
        SHA=$(cut -d' ' -f1 SHA256SUMS.txt)
        ISO_FILE=$(ls Solvionyx-Aurora-*.iso.xz | head -n 1)

        cat <<HTML > os.html
        <!DOCTYPE html>
        <html lang="en">
        <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Solvionyx OS ‚Äî Aurora (GNOME)</title>
          <style>
            body { font-family: 'Inter', sans-serif; background: #0b0c10; color: #e0e0e0; margin: 0; text-align: center; padding: 2em; }
            header { background: linear-gradient(90deg, #0b0c10, #111122); padding: 1em 0; }
            h1 { color: #4fe0b0; margin: 0; }
            a.btn { background: #4fe0b0; color: #0b0c10; padding: 1em 2em; border-radius: 8px; text-decoration: none; font-weight: 700; display: inline-block; margin-top: 1.5em; }
            a.btn:hover { opacity: 0.9; }
            .info { margin-top: 2em; font-size: 1rem; }
          </style>
        </head>
        <body>
          <header><h1>Solvionyx OS Aurora (GNOME)</h1></header>
          <main>
            <p><strong>Version:</strong> $VERSION</p>
            <a href="https://solviony.com/os/latest/$ISO_FILE" class="btn">‚¨áÔ∏è Download Solvionyx OS</a>
            <div class="info">
              <p>Tagline: <em>The engine behind the vision.</em></p>
              <p>SHA256: <code>$SHA</code></p>
              <p>Build updated automatically by Solvionyx CI/CD</p>
            </div>
          </main>
        </body>
        </html>
        HTML

        lftp -e "
          set ssl:verify-certificate no;
          lcd .;
          cd /httpdocs/page;
          put -O . os.html;
          bye
        " -u \"$FTP_USER\",\"$FTP_PASS\" \"$FTP_HOST\"

        echo "‚úÖ Webpage updated successfully at: https://solviony.com/page/os"

    - name: üöÄ Publish GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: Aurora-v${{ github.run_number }}
        name: "Solvionyx Aurora OS (GNOME) v${{ github.run_number }}"
        body: |
          **Solvionyx OS Aurora (GNOME Edition)**
          Tagline: *The engine behind the vision.*

          ‚úÖ Includes:
          - GNOME desktop environment
          - Calamares installer
          - Solvionyx branding
          - Live boot support (casper)

          üåê **Direct Download:**
          https://solviony.com/os/latest/Solvionyx-Aurora-v${{ github.run_number }}.iso.xz

          üßæ **SHA256SUMS:**
          https://solviony.com/os/latest/SHA256SUMS.txt
