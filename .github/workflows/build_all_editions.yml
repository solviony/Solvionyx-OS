name: Build & Release Solvionyx OS Aurora (GNOME)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Aurora (GNOME)
    runs-on: ubuntu-24.04
    timeout-minutes: 120

    steps:
    - name: üß© Checkout repository
      uses: actions/checkout@v4

    - name: ‚öôÔ∏è Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          debootstrap grub-pc-bin grub-efi-amd64-bin grub-common \
          syslinux isolinux syslinux-utils mtools xorriso squashfs-tools \
          rsync systemd-container genisoimage dosfstools xz-utils

    - name: üß† Run Solvionyx Aurora ISO Builder
      run: |
        chmod +x build_iso_debian.sh
        sudo bash build_iso_debian.sh

    - name: üßπ Normalize permissions
      run: |
        echo "üîß Fixing permissions..."
        sudo chmod -R 777 solvionyx_build || true
        sudo chown -R $USER:$USER solvionyx_build || true
        ls -lh solvionyx_build | grep .iso || true

    - name: üîç Verify ISO existence
      run: |
        echo "üîç Searching for ISO..."
        find solvionyx_build -maxdepth 2 -type f \( -name "*.iso" -o -name "*.iso.xz" \)
        if ! find solvionyx_build -type f -name "*.iso*" | grep -q .; then
          echo "‚ùå No ISO file found!"
          exit 1
        else
          echo "‚úÖ ISO file located successfully."
        fi

    - name: üóúÔ∏è Compress ISO (max compression)
      run: |
        echo "üóúÔ∏è Compressing ISO..."
        cd solvionyx_build
        FILE=$(find . -maxdepth 1 -type f -name "*.iso" | head -n1)
        if [ -z "$FILE" ]; then
          echo "‚ùå No ISO found to compress. Build step may have failed."
          exit 1
        fi
        xz -T0 -9e "$FILE"
        echo "‚úÖ Compression complete."
        ls -lh *.xz

    - name: üîê Generate checksums
      run: |
        cd solvionyx_build
        sha256sum *.xz > SHA256SUMS.txt
        chmod 644 SHA256SUMS.txt
        cat SHA256SUMS.txt

    # AWS CONFIGURATION + UPLOAD
    - name: ‚òÅÔ∏è Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: ‚òÅÔ∏è Upload to AWS S3 (Versioned and Latest)
      run: |
        echo "üåç Uploading ISO and checksums to S3..."
        VERSION="v${{ github.run_number }}"
        S3_BUCKET=${{ secrets.S3_BUCKET }}
        REGION=${{ secrets.AWS_DEFAULT_REGION }}

        # Upload versioned files
        aws s3 cp solvionyx_build/*.iso.xz s3://$S3_BUCKET/aurora/$VERSION/ --acl public-read
        aws s3 cp solvionyx_build/SHA256SUMS.txt s3://$S3_BUCKET/aurora/$VERSION/ --acl public-read

        # Update 'latest' alias
        aws s3 cp solvionyx_build/*.iso.xz s3://$S3_BUCKET/aurora/latest/ --acl public-read
        aws s3 cp solvionyx_build/SHA256SUMS.txt s3://$S3_BUCKET/aurora/latest/ --acl public-read

        echo "‚úÖ Upload completed successfully at:"
        echo "Versioned: https://$S3_BUCKET.s3.$REGION.amazonaws.com/aurora/$VERSION/"
        echo "Latest:    https://$S3_BUCKET.s3.$REGION.amazonaws.com/aurora/latest/"

    - name: üöÄ Publish GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: Aurora-v${{ github.run_number }}
        name: "Solvionyx Aurora OS (GNOME) v${{ github.run_number }}"
        body: |
          **Solvionyx OS Aurora (GNOME Edition)**  
          Tagline: *"The engine behind the vision."*

          ‚úÖ GNOME desktop  
          ‚úÖ Calamares installer  
          ‚úÖ Solvionyx branding  
          ‚úÖ Live boot support  

          üåç **Downloads (AWS S3):**
          ‚Ä¢ [Versioned](https://${{ secrets.S3_BUCKET }}.s3.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/aurora/v${{ github.run_number }}/Solvionyx-Aurora-v${{ github.run_number }}.iso.xz)  
          ‚Ä¢ [Latest](https://${{ secrets.S3_BUCKET }}.s3.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/aurora/latest/Solvionyx-Aurora-v${{ github.run_number }}.iso.xz)  

          üìú **Checksums:**
          ‚Ä¢ [Versioned](https://${{ secrets.S3_BUCKET }}.s3.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/aurora/v${{ github.run_number }}/SHA256SUMS.txt)  
          ‚Ä¢ [Latest](https://${{ secrets.S3_BUCKET }}.s3.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/aurora/latest/SHA256SUMS.txt)
